{"version":3,"sources":["serviceWorker.js","store/actions.js","store/combineReducers.js","store/reducers/customer.js","store/store.js","components/pages/Landing.js","components/ui/CustomerEntry.js","components/ui/AccountEntry.js","components/pages/CustomerProfile.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","actions","STORE_CUSTOMER","combineReducers","customer","action","type","payload","store","createStore","combineReducer","composeWithDevTools","Landing","props","state","customers","axios","get","then","res","console","log","data","setState","catch","err","dispatch","this","history","push","map","key","id","style","border","onClick","storeCustomerObject","last_name","first_name","React","Component","connect","CustomerEntry","className","to","name","email","String","active","accountManagerId","reasonForJoining","createdDate","AccountEntry","accounts","Axios","matchedAccounts","filter","accObj","customer_id","account","index","borderTop","rowSpan","borderLeft","address","city","zip_code","solar_farm_id","capacity_share","created_date","CustomerProfile","account_manager_id","reason_for_joining","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.899132e3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const actions = {\n    STORE_CUSTOMER: \"STORE_CUSTOMER\",\n};\n\nexport default actions;\n","import { combineReducers } from \"redux\";\nimport customer from \"./reducers/customer\";\n\nexport default combineReducers({\n    customer,\n});\n","import actions from \"../actions\";\n\nexport default function customer(customer = {}, action) {\n    switch (action.type) {\n        case actions.STORE_CUSTOMER:\n            return action.payload;\n        default:\n            return customer;\n    }\n}\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport combineReducer from \"./combineReducers\";\n\nconst initialState = {\n    customer: {},\n};\n\nconst store = createStore(combineReducer, initialState, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport store from \"../../store/store\";\n\nclass Landing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n        };\n    }\n\n    componentDidMount() {\n        axios\n            .get(\"/api/v1/initial.json\")\n            .then((res) => {\n                console.log(res.data);\n                this.setState({ customers: res.data });\n            })\n            .catch((err) => console.log(err));\n    }\n\n    storeCustomerObject(customer) {\n        store.dispatch({\n            type: actions.STORE_CUSTOMER,\n            payload: customer,\n        });\n        this.props.history.push(\"/profile\");\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                        {this.state.customers.map((customer) => {\n                            return (\n                                <tr key={\"row: \" + customer.id}>\n                                    <td\n                                        key={customer.id}\n                                        style={{ border: \"1px solid #333\" }}\n                                        onClick={() =>\n                                            this.storeCustomerObject(customer)\n                                        }\n                                    >\n                                        {customer.last_name +\n                                            \", \" +\n                                            customer.first_name}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        customer: state.customer,\n    };\n}\n\nexport default connect(mapStateToProps)(Landing);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CustomerEntry(props) {\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 mb-5 mt-2\">\n                <Link to=\"/\" className=\"btn btn-dark\">\n                    Back\n                </Link>\n            </div>\n            <div className=\"col-8 offset-2\">\n                <h1>{props.name}</h1>\n                <h4>\n                    <b>Id:</b> {props.id}\n                </h4>\n                <h4>\n                    <b>Email:</b> {props.email}\n                </h4>\n                <h4>\n                    <b>Active:</b> {String(Boolean(props.active))}\n                </h4>\n                <h4>\n                    <b>Account Manager Id:</b> {props.accountManagerId}\n                </h4>\n                <h4>\n                    <b>Reason For Joining:</b> {props.reasonForJoining}\n                </h4>\n                <h4>\n                    <b>Date Joined:</b> {props.createdDate}\n                </h4>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n//import { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nexport default class AccountEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts: [],\n        };\n    }\n    componentDidMount() {\n        Axios.get(\"/api/v1/accounts.json\")\n            .then((res) => {\n                // eslint-disable-next-line\n                const matchedAccounts = res.data.filter((accObj) => {\n                    if (accObj.customer_id === this.props.id) {\n                        return accObj;\n                    }\n                });\n                this.setState({ accounts: matchedAccounts });\n            })\n            .catch((err) => console.log(err));\n    }\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-8 offset-2\">\n                    <table>\n                        <tbody>\n                            {this.state.accounts.map((account, index) => {\n                                return (\n                                    <>\n                                        <tr\n                                            style={{\n                                                borderTop: \"1px solid #333\",\n                                            }}\n                                        >\n                                            <td rowSpan=\"7\" className=\"px-4\">\n                                                {index + 1}\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderTop: \"1px solid #333\",\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                Address\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {account.address}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                City\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {\" \"}\n                                                {account.city}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                State\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {account.state}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                Zip Code\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {account.zip_code}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                Solar Farm Id\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {account.solar_farm_id}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                Capacity Share\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {account.capacity_share}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                Created On\n                                            </td>\n                                            <td\n                                                style={{\n                                                    borderLeft:\n                                                        \"1px solid #333\",\n                                                }}\n                                            >\n                                                {account.created_date}\n                                            </td>\n                                        </tr>\n                                    </>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport CustomerEntry from \"../ui/CustomerEntry\";\nimport { connect } from \"react-redux\";\nimport AccountEntry from \"../ui/AccountEntry\";\n\nclass CustomerProfile extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <CustomerEntry\n                    id={this.props.customer.id}\n                    name={\n                        this.props.customer.first_name +\n                        \" \" +\n                        this.props.customer.last_name\n                    }\n                    email={this.props.customer.email}\n                    active={this.props.customer.active}\n                    accountManagerId={this.props.customer.account_manager_id}\n                    reasonForJoining={this.props.customer.reason_for_joining}\n                    createdDate={this.props.customer.created_date}\n                />\n                <AccountEntry id={this.props.customer.id} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        customer: state.customer,\n    };\n}\n\nexport default connect(mapStateToProps)(CustomerProfile);\n","import React from \"react\";\nimport \"./style/master.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Landing from \"./components/pages/Landing\";\nimport CustomerProfile from \"./components/pages/CustomerProfile\";\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/profile\" component={CustomerProfile} />\n            </Switch>\n        </Router>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}